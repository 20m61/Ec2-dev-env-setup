{
 "Resources": {
  "DevEnvVpc4439C3E3": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/Resource"
   }
  },
  "DevEnvVpcPublicSubnet1Subnet635A9A73": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/Subnet"
   }
  },
  "DevEnvVpcPublicSubnet1RouteTable22473981": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/RouteTable"
   }
  },
  "DevEnvVpcPublicSubnet1RouteTableAssociation0B2769BD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DevEnvVpcPublicSubnet1RouteTable22473981"
    },
    "SubnetId": {
     "Ref": "DevEnvVpcPublicSubnet1Subnet635A9A73"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "DevEnvVpcPublicSubnet1DefaultRouteAFA9A184": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "DevEnvVpcIGW66ABFE0E"
    },
    "RouteTableId": {
     "Ref": "DevEnvVpcPublicSubnet1RouteTable22473981"
    }
   },
   "DependsOn": [
    "DevEnvVpcVPCGW4E791120"
   ],
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "DevEnvVpcPublicSubnet1EIP3BC667C6": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/EIP"
   }
  },
  "DevEnvVpcPublicSubnet1NATGateway41923379": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "DevEnvVpcPublicSubnet1EIP3BC667C6",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "DevEnvVpcPublicSubnet1Subnet635A9A73"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "DevEnvVpcPublicSubnet1DefaultRouteAFA9A184",
    "DevEnvVpcPublicSubnet1RouteTableAssociation0B2769BD"
   ],
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet1/NATGateway"
   }
  },
  "DevEnvVpcPublicSubnet2SubnetC1D25FAD": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet2/Subnet"
   }
  },
  "DevEnvVpcPublicSubnet2RouteTable117827DD": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet2/RouteTable"
   }
  },
  "DevEnvVpcPublicSubnet2RouteTableAssociation8871A04A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DevEnvVpcPublicSubnet2RouteTable117827DD"
    },
    "SubnetId": {
     "Ref": "DevEnvVpcPublicSubnet2SubnetC1D25FAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "DevEnvVpcPublicSubnet2DefaultRouteD37E117E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "DevEnvVpcIGW66ABFE0E"
    },
    "RouteTableId": {
     "Ref": "DevEnvVpcPublicSubnet2RouteTable117827DD"
    }
   },
   "DependsOn": [
    "DevEnvVpcVPCGW4E791120"
   ],
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "DevEnvVpcPrivateSubnet1Subnet80F612C9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet1/Subnet"
   }
  },
  "DevEnvVpcPrivateSubnet1RouteTable1AB70A49": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet1/RouteTable"
   }
  },
  "DevEnvVpcPrivateSubnet1RouteTableAssociation11127C80": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DevEnvVpcPrivateSubnet1RouteTable1AB70A49"
    },
    "SubnetId": {
     "Ref": "DevEnvVpcPrivateSubnet1Subnet80F612C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "DevEnvVpcPrivateSubnet1DefaultRoute56EF24AE": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "DevEnvVpcPublicSubnet1NATGateway41923379"
    },
    "RouteTableId": {
     "Ref": "DevEnvVpcPrivateSubnet1RouteTable1AB70A49"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "DevEnvVpcPrivateSubnet2Subnet9FFD2A46": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet2/Subnet"
   }
  },
  "DevEnvVpcPrivateSubnet2RouteTable9D3742F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet2/RouteTable"
   }
  },
  "DevEnvVpcPrivateSubnet2RouteTableAssociation55012321": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DevEnvVpcPrivateSubnet2RouteTable9D3742F1"
    },
    "SubnetId": {
     "Ref": "DevEnvVpcPrivateSubnet2Subnet9FFD2A46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "DevEnvVpcPrivateSubnet2DefaultRoute9A119420": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "DevEnvVpcPublicSubnet1NATGateway41923379"
    },
    "RouteTableId": {
     "Ref": "DevEnvVpcPrivateSubnet2RouteTable9D3742F1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "DevEnvVpcIGW66ABFE0E": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/IGW"
   }
  },
  "DevEnvVpcVPCGW4E791120": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "DevEnvVpcIGW66ABFE0E"
    },
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvVpc/VPCGW"
   }
  },
  "DevEnvRole854FA08A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvRole/Resource"
   }
  },
  "DevEnvSG8A1BEE22": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow SSH and HTTPS",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTPS",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow code-server",
      "FromPort": 8080,
      "IpProtocol": "tcp",
      "ToPort": 8080
     }
    ],
    "VpcId": {
     "Ref": "DevEnvVpc4439C3E3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvSG/Resource"
   }
  },
  "DevEnvInstanceInstanceProfileEF0ED2B4": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "DevEnvRole854FA08A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvInstance/InstanceProfile"
   }
  },
  "DevEnvInstance77E0E04E": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "VolumeSize": 100,
       "VolumeType": "gp3"
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "DevEnvInstanceInstanceProfileEF0ED2B4"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t4g.xlarge",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "DevEnvSG8A1BEE22",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "DevEnvVpcPrivateSubnet1Subnet80F612C9"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "DevEnvStack/DevEnvInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nset -eux\n# 基本ツール\nsudo yum update -y\nsudo yum install -y git docker awscli\nsudo systemctl enable --now docker\nsudo usermod -aG docker ec2-user\n\n# code-server install\ncurl -fsSL https://code-server.dev/install.sh | sh\nsudo systemctl enable --now code-server@$USER\n\n# git worktree用ディレクトリ\nmkdir -p /home/ec2-user/repos\nchown ec2-user:ec2-user /home/ec2-user/repos\n\n# 任意: dotfilesや初期セットアップ\n# su - ec2-user -c 'git clone ...'\n"
    }
   },
   "DependsOn": [
    "DevEnvRole854FA08A"
   ],
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/DevEnvInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOQYvCQAyFf4v36ayWvXgUEelFhnbxKukYMdpmZCZjkdL/Lt1Ri6f38iV5vFwvlks9n0EXMnu8Zg3Vuq8E7FVBFw492lz3+5tV6xPvzVqZWDdkq1gzysgmV7oo+Ad1gxOf2CoEZwmEHH+OR7MpzCg7kC0IdvBQxtMdBKfgggU94+cgNXlNKxGw5xZZVIU2epLH1rt4++/wBQoOAmwxRSY/KIJW96VLpd/6XhvvTtTgMKgSg4s+PRvw0KKgHxS7I+pL+LnnuV786vnsEogyH1moRV0mfQKObK+xYwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DevEnvStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}